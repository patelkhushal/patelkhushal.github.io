{"version":3,"sources":["NavBar.js","assets/images/HomeBackgroundImage.jpg","Home.js","assets/images/ProfilePicture.jpg","assets/images/MachineLearning.svg","assets/images/DataAnalytics.svg","assets/images/BlockChain.svg","About.js","assets/images/LassondeLogo.png","assets/images/TutorDoctorLogo.png","assets/images/IBMLogo.jpg","Timeline.js","assets/images/TwitterUserProfiler.png","assets/images/LectureHallFinder.png","assets/images/HotelReviewsAnalyzer.jpg","assets/images/CityWeatherAnalytics.jpg","assets/images/StayHomeRewards.jpg","assets/images/BitcoinTestnetUtility.png","assets/images/ImageEditor.png","assets/images/LibraryEPurchases.jpeg","assets/images/PortfolioWebsite.png","Projects.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","useState","isNavExpanded","setIsNavExpanded","isTabletOrMobile","useMediaQuery","query","iconLabels","linkElementsIcons","AiFillHome","RiUser3Fill","RiFootprintFill","AiFillAppstore","RiStackFill","IoMdChatbubbles","Navbar","id","className","sticky","variant","expand","style","minHeight","onToggle","expanded","Toggle","Collapse","Nav","map","linkElementName","index","activeClass","to","spy","smooth","duration","offset","onClick","iconIndex","React","createElement","fontSize","Home","name","Grow","in","timeout","Container","fluid","paddingLeft","paddingRight","height","position","backgroundImage","HomeBackgroundImage","left","delay","top","textAlign","forever","paddingBottom","Button","size","scroller","scrollTo","right","About","breakLgScreenFlipCards","isExtraSmallScreenWidth","isMobile","isMobileDevice","setIsMobileDevice","useEffect","handleResize","navigator","maxTouchPoints","window","addEventListener","removeEventListener","useMobileDeviceCheck","flipCards","RiNetflixFill","FaDollarSign","BsMusicNoteList","GiCampfire","GiPencilBrush","GiRingedPlanet","Row","Col","md","direction","triggerOnce","src","ProfilePicture","alt","width","borderRadius","paddingTop","MachineLearningImage","color","fontWeight","DataAnalyticsImage","BlockChainImage","backgroundColor","lg","flipCard","sm","xs","display","alignItems","flipOnHover","flipOnClick","iconName","Timeline","inView","setInView","getContentStyle","borderColor","borderTop","getIconStyle","background","timelineCards","header","subHeader","date","contentStyle","iconStyle","icon","FaGraduationCap","imageSrc","LassondeLogo","FaChalkboardTeacher","TutorDoctorLogo","FaBriefcase","IBMLogo","align","animate","timelineCard","onChange","Projects","fullStackAndWebProjects","miniTechStack","techStack","imageUrl","TwitterUserProfiler","themeColor","LectureHallFinder","PortfolioWebsite","dataAnalyticsProjects","HotelReviewsAnalyzer","CityWeatherAnalytics","mobileAndOtherProjects","StayHomeRewards","BitcoinTestnetUtility","ImageEditor","LibraryEPurchases","allProjectsWithDup","allProjectsNoDup","Set","item","JSON","stringify","allProjects","parse","buttonLabelsToProjects","All","projectType","setProjectType","projectCards","setProjectCards","ToggleButtonGroup","value","exclusive","event","newProjectType","target","innerText","Object","keys","projectTypeToggleButton","ToggleButton","disableRipple","padding","cascade","damping","projectCard","maxHeight","front","objectFit","objectPosition","back","alignContent","flexDirection","border","tech","length","fontFamily","marginTop","textTransform","animationSpeed","uuid","App","loading","setLoading","timer","setTimeout","clearTimeout","changeBackgroundColor","document","body","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52142684.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-scroll\";\nimport { useMediaQuery } from 'react-responsive'\nimport { AiFillHome, AiFillAppstore } from \"react-icons/ai\";\nimport { RiUser3Fill, RiStackFill, RiFootprintFill } from \"react-icons/ri\";\nimport { IoMdChatbubbles } from \"react-icons/io\";\n\nexport default function NavBar() {\n  const [isNavExpanded, setIsNavExpanded] = useState(false);\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' })\n\n  const linkElements = [\"home\", \"about\", \"timeline\", \"projects\", \"jisoo\", \"joy\"];\n  const iconLabels = [\n    \"Home\",\n    \"About\",\n    \"Timeline\",\n    \"Projects\",\n    \"Skills\",\n    \"Contact\",\n  ];\n  const linkElementsIcons = [\n    AiFillHome,\n    RiUser3Fill,\n    RiFootprintFill,\n    AiFillAppstore,\n    RiStackFill,\n    IoMdChatbubbles,\n  ];\n\n  const IconTag = (iconIndex) => {\n    return React.createElement(linkElementsIcons[iconIndex], null, \"\");\n  };\n\n  return (\n    <Navbar\n      id=\"navbar\"\n      className=\"justify-content-center\"\n      sticky=\"top\"\n      // bg=\"white\"\n      variant=\"dark\"\n      expand=\"lg\"\n      style={{ minHeight: \"7.12vh\" }}\n      onToggle={() => setIsNavExpanded(!isNavExpanded)}\n      // onSelect={() => setIsNavExpanded((currentIsNavExpanded) => !currentIsNavExpanded)}\n      // onToggle={setIsNavExpanded(currentIsNavExpanded => !currentIsNavExpanded)}\n      expanded={isNavExpanded}\n    >\n      <Navbar.Toggle id=\"responsive-navbar-toggle\" />\n      <Navbar.Collapse\n        id=\"responsive-navbar-nav\"\n        className=\"justify-content-center\"\n      >\n        <Nav>\n          {linkElements.map((linkElementName, index) => {\n            return (\n              <Link\n                key={index}\n                className=\"nav-item zoom\"\n                activeClass=\"active\"\n                to={linkElementName}\n                spy={true}\n                smooth={true}\n                duration={475}\n                // offset={-275}\n                offset={isTabletOrMobile? -275 : -65}\n                // offset={isTabletOrMobile? -275 : -65}\n                // offset={-55}\n                onClick={() => setIsNavExpanded(false)}\n                // onSetInactive={() => setIsNavExpanded(false)}\n              >\n                <div className=\"icon-container\">{IconTag(index)}</div>\n                <span style={{ fontSize: \"0.9em\" }}>{iconLabels[index]}</span>\n              </Link>\n            );\n          })}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/HomeBackgroundImage.059f49b0.jpg\";","import React, { useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { useMediaQuery } from 'react-responsive'\nimport Container from \"react-bootstrap/Container\";\n// import Typing from \"react-typing-animation\";\nimport { scroller } from \"react-scroll\";\nimport { Link } from \"react-scroll\";\nimport Button from \"react-bootstrap/Button\";\n\nimport Bounce from \"react-reveal/Bounce\";\nimport Fade from \"react-reveal/Fade\";\nimport Pulse from \"react-reveal/Pulse\";\n\nimport ParticlesComp from \"./ParticlesComp\";\n\nimport Grow from \"@material-ui/core/Grow\";\n// import Collapse from \"@material-ui/core/Collapse\";\n// import Fade from \"@material-ui/core/Fade\";\n// import Slide from \"@material-ui/core/Slide\";\n// import Zoom from \"@material-ui/core/Zoom\";\n\nimport {\n  AiFillAppstore,\n  AiFillLinkedin,\n  AiFillGithub,\n  AiOutlineArrowRight,\n} from \"react-icons/ai\";\nimport { RiUser3Fill, RiStackFill, RiFootprintFill } from \"react-icons/ri\";\nimport { IoMdChatbubbles } from \"react-icons/io\";\nimport { HiMail } from \"react-icons/hi\";\nimport HomeBackgroundImage from './assets/images/HomeBackgroundImage.jpg';\n\nexport default function Home() {\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' })\n  const linkElements = [\"about\", \"timeline\", \"projects\", \"jisoo\", \"joy\"];\n  const iconLabels = [\"About\", \"Timeline\", \"Projects\", \"Skills\", \"Contact\"];\n  const linkElementsIcons = [\n    RiUser3Fill,\n    RiFootprintFill,\n    AiFillAppstore,\n    RiStackFill,\n    IoMdChatbubbles,\n  ];\n\n  const IconTag = (iconIndex) => {\n    return React.createElement(linkElementsIcons[iconIndex], null, \"\");\n  };\n\n  return (\n    <Element name=\"home\" className=\"home\">\n      <Grow in={true} timeout={1000}>\n        <Container\n          fluid\n          className=\"justify-content-center\"\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            height: \"100vh\",\n            position: \"relative\",\n            // height: \"93.11vh\",\n            // display: \"block\",\n          }}\n        >\n          {/* <ParticlesComp /> */}\n          <div id=\"home-background\" style={{backgroundImage: \"url(\" + HomeBackgroundImage + \")\"}}></div>\n          <Fade left delay={2200}>\n            <div id=\"side-nav\">\n              {linkElements.map((linkElementName, index) => {\n                return (\n                  <div className=\"side-nav-icon-container\" key={index}>\n                    <Link\n                      className=\"side-nav-item zoom\"\n                      to={linkElementName}\n                      smooth={true}\n                      duration={500}\n                      offset={-55}\n                    >\n                      <div>{IconTag(index)}</div>\n                    </Link>\n                    <div className=\"side-nav-item-text\">\n                      {iconLabels[index]}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </Fade>\n          <Container id=\"type-greeting-container\">\n            <Bounce top delay={900}>\n              <div style={{ textAlign: \"center\" }}>\n                <p>\n                  Hello! My name is{\" \"}\n                  <span id=\"greeting-name\">Khushal Patel</span>\n                </p>\n                <p>I'm a Software Dev :)</p>\n              </div>\n            </Bounce>\n            <Fade left delay={1900}>\n              <div>\n                <Pulse forever={true}>\n                  <div style={{ paddingBottom: \"20px\" }}>\n                    <Button\n                      id=\"more-button\"\n                      size=\"lg\"\n                      // variant=\"info\"\n                      onClick={() => {\n                        scroller.scrollTo(\"about\", {\n                          smooth: true,\n                          offset: isTabletOrMobile? -50 : -65,\n                          duration: 500,\n                        });\n                      }}\n                    >\n                      Learn More{\" \"}\n                      <span id=\"more-button-arrow\">\n                        <AiOutlineArrowRight />\n                      </span>\n                    </Button>\n                  </div>\n                </Pulse>\n              </div>\n            </Fade>\n          </Container>\n          <Fade right delay={2200}>\n            <div id=\"bottom-bar-contact\">\n              <div className=\"side-nav-icon-container\">\n                <span className=\"side-nav-item zoom\">\n                  <AiFillLinkedin />\n                </span>\n              </div>\n              <div className=\"side-nav-icon-container\">\n                <span className=\"side-nav-item zoom\">\n                  <AiFillGithub />\n                </span>\n              </div>\n              <div className=\"side-nav-icon-container\">\n                <span className=\"side-nav-item zoom\">\n                  <HiMail />\n                </span>\n              </div>\n            </div>\n          </Fade>\n        </Container>\n      </Grow>\n    </Element>\n  );\n}\n\n//   <Typing speed={2} onFinishedTyping={() => renderArrow()}>\n//   <Typing.Delay ms={1000} />\n//   <div style={{ minHeight: \"128px\", textAlign: \"center\" }}>\n//     <p>\n//       Hello! My name is{\" \"}\n//       <span id=\"greeting-name\">Khushal Patel</span>\n//     </p>\n//     <p>I'm a Software Dev :)</p>\n//   </div>\n// </Typing>\n","export default __webpack_public_path__ + \"static/media/ProfilePicture.f78133db.jpg\";","export default __webpack_public_path__ + \"static/media/MachineLearning.df32dd30.svg\";","export default __webpack_public_path__ + \"static/media/DataAnalytics.07614297.svg\";","export default __webpack_public_path__ + \"static/media/BlockChain.221008b9.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { useMediaQuery } from \"react-responsive\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nimport { RiNetflixFill } from \"react-icons/ri\";\nimport { FaDollarSign } from \"react-icons/fa\";\nimport { BsMusicNoteList } from \"react-icons/bs\";\nimport { GiRingedPlanet, GiPencilBrush, GiCampfire } from \"react-icons/gi\";\n\n// import Fade from \"react-reveal/Fade\";\nimport { Fade, Slide } from \"react-awesome-reveal\";\n// import Slide from \"react-reveal/Fade\";\n\nimport ProfilePicture from \"./assets/images/ProfilePicture.jpg\";\nimport MachineLearningImage from \"./assets/images/MachineLearning.svg\";\nimport DataAnalyticsImage from \"./assets/images/DataAnalytics.svg\";\nimport BlockChainImage from \"./assets/images/BlockChain.svg\";\n\nexport default function About() {\n  const breakLgScreenFlipCards = useMediaQuery({\n    query: \"(max-width: 1199px)\",\n  });\n  // const stopAnimateWidth = useMediaQuery({ query: \"(max-width: 768px)\" });\n  // const stopAnimateHeight = useMediaQuery({ query: \"(min-height: 750px)\" });\n  const isExtraSmallScreenWidth = useMediaQuery({\n    query: \"(max-width: 359px)\",\n  });\n  const isMobile = useMobileDeviceCheck();\n\n  //flipCards (2d array) format: [ [label, icon, back-text, background-color],... ]\n  const flipCards = [\n    [\n      \"Movies & TV Shows\",\n      RiNetflixFill,\n      \"Sci-Fi, Fantasy, Action, Sitcoms, Anime, KDrama, You Name it!\",\n      \"rgb(204 29 29)\",\n    ],\n    [\"Trading\", FaDollarSign, \"Cryptos and Stocks\", \"rgb(49 160 58)\"],\n    [\n      \"International Music\",\n      BsMusicNoteList,\n      \"Bollywood, Kpop, Jpop and Spanish Music\",\n      \"rgb(202 39 122)\",\n    ],\n    [\n      \"Hiking\",\n      GiCampfire,\n      \"Hiking, Camping, and Stargazing\",\n      \"rgb(25 131 162)\",\n    ],\n    [\n      \"Sketching\",\n      GiPencilBrush,\n      \"Mostly Landscapes and Anime portraits\",\n      \"rgb(108 66 177)\",\n    ],\n    [\n      \"Astronomy\",\n      GiRingedPlanet,\n      \"Parallel universe, Dark Matter, Big Bang, Aliens\",\n      \"rgb(45 42 40)\",\n    ],\n  ];\n\n  const IconTag = (iconName) => {\n    return React.createElement(iconName, null, \"\");\n  };\n\n  return (\n    <Element name=\"about\" id=\"about-comp\" className=\"with-navbar-component\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <h4 style={{ paddingBottom: \"23px\" }}>About Me</h4>\n        </Row>\n        <Row>\n          <Col md=\"auto\" style={{ textAlign: \"center\" }}>\n            <Slide direction=\"left\" triggerOnce={true}>\n              {/* <Slide direction=\"left\" delay={stopAnimateWidth || stopAnimateHeight ? 0 : 175}> */}\n              <div>\n                <img\n                  src={ProfilePicture}\n                  alt=\"ProfilePicture\"\n                  style={{\n                    height: \"300px\",\n                    width: \"250px\",\n                    borderRadius: \"50%\",\n                  }}\n                ></img>\n              </div>\n              <div style={{ paddingTop: \"15px\", textAlign: \"center\" }}>\n                <h5>Hello, I'm Khushal Patel</h5>\n                <p>Full Stack / Software Dev / Data Analyst</p>\n              </div>\n            </Slide>\n          </Col>\n          <Col>\n            <Slide direction=\"right\" triggerOnce={true}>\n              {/* <Slide direction=\"right\" delay={stopAnimateWidth || stopAnimateHeight ? 0 : 1100}> */}\n              <h5 style={{ paddingBottom: \"7px\", textAlign: \"center\" }}>\n                Who Am I?\n              </h5>\n              <p>\n                I am a Software Developer based in Toronto, CA. I have serious\n                passion for learning new technologies and applying them to solve\n                complex world problems. Having 3+ years of professional\n                experience, I was fortunate enough to work on interesting\n                problems wearing multiple hats while working as Data Analyst,\n                Full Stack, Web/Mobile Applications Dev and QA Automation\n                Engineer.\n              </p>\n              <br />\n            </Slide>\n            <Container style={{ textAlign: \"center\" }}>\n              <Slide direction=\"right\" triggerOnce={true}>\n                {/* <Slide direction=\"right\" delay={stopAnimateWidth || stopAnimateHeight ? 0 : 1800}> */}\n                <Row\n                  className=\"justify-content-center\"\n                  style={{ paddingBottom: \"15px\" }}\n                >\n                  <p>\n                    Recently, I have been intrigued by these technologies and\n                    steering my career in that direction\n                  </p>\n                </Row>\n                <Row>\n                  <Col>\n                    <img\n                      src={MachineLearningImage}\n                      alt=\"ml\"\n                      style={{ height: \"100px\", width: \"100px\", color: \"teal\" }}\n                    ></img>\n                    <p style={{ paddingTop: \"7px\", fontWeight: \"500\" }}>\n                      Machine Learning\n                    </p>\n                  </Col>\n                  <Col>\n                    <img\n                      src={DataAnalyticsImage}\n                      alt=\"data-analytics\"\n                      style={{ height: \"100px\", width: \"100px\" }}\n                    ></img>\n                    <p style={{ paddingTop: \"7px\", fontWeight: \"500\" }}>\n                      Data Analytics\n                    </p>\n                  </Col>\n                  <Col>\n                    <img\n                      src={BlockChainImage}\n                      alt=\"blockchain\"\n                      style={{\n                        height: \"100px\",\n                        width: \"100px\",\n                        backgroundColor: \"white\",\n                      }}\n                    ></img>\n                    <p style={{ paddingTop: \"7px\", fontWeight: \"500\" }}>\n                      BlockChain\n                    </p>\n                  </Col>\n                </Row>\n              </Slide>\n            </Container>\n          </Col>\n        </Row>\n        {/* <Slide direction=\"up\" triggerOnce={true}> */}\n        <Slide direction=\"up\" triggerOnce={true}>\n          {/* <Slide direction=\"down\" delay={(stopAnimateWidth || stopAnimateHeight) ? 0 : 2200}> */}\n          <Row\n            className=\"justify-content-center\"\n            style={{\n              paddingTop: \"45px\",\n              paddingBottom: \"0px\",\n              textAlign: \"center\",\n            }}\n          >\n            <p>\n              <span style={{ fontSize: \"1.3rem\", fontWeight: \"550\" }}>\n                {\" \"}\n                Hobbies {\"&\"} Interests\n              </span>\n              <br></br>\n              You'd see me talk a lot about things like\n            </p>\n          </Row>\n          <Row\n            // xs={isExtraSmallScreenWidth ? 1 : 2}\n            // sm={2}\n            // md={3}\n            lg={breakLgScreenFlipCards ? 5 : 6}\n            className=\"justify-content-center\"\n            // style={{ marginRight: \"0px\" }}\n          >\n            {flipCards.map((flipCard, index) => {\n              return (\n                <Col\n                  md=\"auto\"\n                  sm=\"auto\"\n                  xs=\"auto\"\n                  className=\"flip-card-col justify-content-center\"\n                  key={index}\n                  style={{ display: \"flex\", alignItems: \"center\" }}\n                >\n                  {/* style={{maxHeight: \"160px\", maxWidth: \"185px\"}} */}\n                  <Flippy\n                    flipOnHover={isMobile ? false : true}\n                    flipOnClick={isMobile ? true : false}\n                    // style={{height: \"140px\", width: \"165px\"}}\n                    // style={{width: \"170px\", height:\"140px\", borderColor: \"2px cyan\"}}\n                  >\n                    <FrontSide\n                      className={\n                        isExtraSmallScreenWidth ? \"flip-card-xs\" : \"flip-card\"\n                      }\n                      // style={{ backgroundColor: flipCard[3] }}\n                      style={{\n                        // width: \"170px\",\n                        // height: \"140px\",\n                        backgroundColor: flipCard[3],\n                      }}\n                    >\n                      <span>{IconTag(flipCard[1])}</span>\n                      <span\n                        style={{\n                          fontSize: isExtraSmallScreenWidth\n                            ? \"0.83rem\"\n                            : \"0.95rem\",\n                          fontWeight: \"525\",\n                          paddingTop: \"10px\",\n                        }}\n                      >\n                        {flipCard[0]}\n                      </span>\n                    </FrontSide>\n\n                    <BackSide\n                      className={\n                        isExtraSmallScreenWidth ? \"flip-card-xs\" : \"flip-card\"\n                      }\n                      style={{ backgroundColor: flipCard[3] }}\n                    >\n                      <span\n                        style={{\n                          fontSize: isExtraSmallScreenWidth\n                            ? \"0.65rem\"\n                            : \"0.82rem\",\n                          fontWeight: \"525\",\n                        }}\n                      >\n                        {flipCard[2]}\n                      </span>\n                    </BackSide>\n                  </Flippy>\n                </Col>\n              );\n            })}\n          </Row>\n        </Slide>\n        {/* </Slide> */}\n      </Container>\n    </Element>\n  );\n}\n\n// Hook to detect mobile devices\nfunction useMobileDeviceCheck() {\n  const [isMobileDevice, setIsMobileDevice] = useState(false);\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Detect if current device is mobile\n      setIsMobileDevice(!!navigator.maxTouchPoints);\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial device type\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return isMobileDevice;\n}\n","export default __webpack_public_path__ + \"static/media/LassondeLogo.11e42801.png\";","export default __webpack_public_path__ + \"static/media/TutorDoctorLogo.a81949b1.png\";","export default __webpack_public_path__ + \"static/media/IBMLogo.9f94b8d9.jpg\";","import React, { useState, useEffect } from \"react\";\nimport { Element } from \"react-scroll\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { InView } from \"react-intersection-observer\";\nimport {\n  FaGraduationCap,\n  FaChalkboardTeacher,\n  FaBriefcase,\n} from \"react-icons/fa\";\n\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement,\n} from \"react-vertical-timeline-component\";\nimport \"react-vertical-timeline-component/style.min.css\";\n\nimport LassondeLogo from './assets/images/LassondeLogo.png';\nimport TutorDoctorLogo from './assets/images/TutorDoctorLogo.png';\nimport IBMLogo from './assets/images/IBMLogo.jpg';\n// import { Fade, AttentionSeeker, Slide, Bounce } from \"react-awesome-reveal\";\n// import {\n//   Fade as FadeReactReveal,\n//   Bounce as BounceReactReveal,\n// } from \"react-reveal\";\n\nexport default function Timeline() {\n  const [inView, setInView] = useState(false); //to check if the last timeline element is displayed so we can stop the animation after that. This is to trigger thr <VerticalTimeline> component to use animation only once\n  const isMobile = useMobileDeviceCheck();\n\n  const getContentStyle = (borderColor) => {\n    return { borderTop: \"4.5px solid \" + borderColor };\n  };\n\n  const getIconStyle = (backgroundColor) => {\n    return { background: backgroundColor, color: \"#fff\" };\n  };\n\n  const timelineCards = [\n    {\n      header: \"Lassonde School of Engineering - York University\",\n      subHeader: \"Honors Bachelor of Science (HBSc) - Computer Science\",\n      date: \"2015 - 2020\",\n      contentStyle: getContentStyle(\"rgb(233, 30, 99)\"),\n      iconStyle: getIconStyle(\"rgb(233, 30, 99)\"),\n      icon: React.createElement(FaGraduationCap, null, \"\"),\n      imageSrc: LassondeLogo,\n    },\n    {\n      header: \"Excel Lassonde - York University\",\n      subHeader: \"Peer Tutor\",\n      date: \"2016 - 2018\",\n      contentStyle: getContentStyle(\"MediumSeaGreen\"),\n      iconStyle: getIconStyle(\"MediumSeaGreen\"),\n      icon: React.createElement(FaChalkboardTeacher, null, \"\"),\n      imageSrc: LassondeLogo,\n    },\n    {\n      header: \"Tutor Doctor\",\n      subHeader: \"Tutor\",\n      date: \"2017 - 2018\",\n      contentStyle: getContentStyle(\"MediumSeaGreen\"),\n      iconStyle: getIconStyle(\"MediumSeaGreen\"),\n      icon: React.createElement(FaChalkboardTeacher, null, \"\"),\n      imageSrc: TutorDoctorLogo\n    },\n    {\n      header: \"IBM Canada\",\n      subHeader: \"Software Developer Intern\",\n      date: \"2018 - 2019\",\n      contentStyle: getContentStyle(\"SteelBlue\"),\n      iconStyle: getIconStyle(\"SteelBlue\"),\n      icon: React.createElement(FaBriefcase, null, \"\"),\n      imageSrc: IBMLogo\n    },\n    {\n      header: \"IBM Canada\",\n      subHeader: \"Software Developer Student On Call\",\n      date: \"2019 - 2020\",\n      contentStyle: getContentStyle(\"SteelBlue\"),\n      iconStyle: getIconStyle(\"SteelBlue\"),\n      icon: React.createElement(FaBriefcase, null, \"\"),\n      imageSrc: IBMLogo,\n    },\n    {\n      header: \"IBM Canada\",\n      subHeader: \"Software Developer\",\n      date: \"2020 - Present\",\n      contentStyle: getContentStyle(\"SteelBlue\"),\n      iconStyle: getIconStyle(\"SteelBlue\"),\n      icon: React.createElement(FaBriefcase, null, \"\"),\n      imageSrc: IBMLogo,\n    },\n  ];\n\n  // const ConditionalWrapper = ({ condition, wrapper, children }) =>\n  //   condition ? wrapper(children) : children;\n\n  return (\n    <Element\n      name=\"timeline\"\n      className=\"with-navbar-component\"\n      style={{ backgroundColor: \"rgb(232 232 232)\" }}\n    >\n      {/* <FadeReactReveal right when={isMobile}> */}\n      <Container>\n        <h4 align=\"center\">Timeline</h4>\n        <br></br>\n        <VerticalTimeline animate={inView || isMobile ? false : true}>\n          {timelineCards.map((timelineCard, index) => {\n            return (\n              // <ConditionalWrapper\n              //   condition={isMobile}\n              //   wrapper={(children) => (\n              //     <FadeReactReveal right>\n              //       {children}\n              //     </FadeReactReveal>\n              //   )}\n              // >\n                <VerticalTimelineElement\n                  key={index}\n                  contentStyle={timelineCard.contentStyle}\n                  // contentStyle={{ background: \"rgb(233, 30, 99)\", color: \"#fff\" }}\n                  // contentArrowStyle={{ borderRight: \"7px solid  rgb(33, 150, 243)\" }}\n                  date={timelineCard.date}\n                  iconStyle={timelineCard.iconStyle}\n                  icon={timelineCard.icon}\n                >\n                  <Container>\n                    <Row>\n                      <Col xs={8} md={8} lg={8}>\n                        {/* <h5>{timelineCard.header}</h5> */}\n                        <div style={{fontSize: \"large\", fontWeight: \"525\"}}>{timelineCard.header}</div>\n                        <p style={{fontSize: \"0.92rem\"}}>{timelineCard.subHeader}</p>\n                      </Col>\n                      <Col className=\"timeline-logo-container\">\n                        <img\n                          src={timelineCard.imageSrc}\n                          alt={timelineCard.header}\n                          className=\"timeline-logo\"\n                        ></img>\n                      </Col>\n                    </Row>\n                  </Container>\n                </VerticalTimelineElement>\n              // </ConditionalWrapper>\n            );\n          })}\n        </VerticalTimeline>\n\n        {/* Stop the vertical timeline element animation once this empty hidden div at the end is visible on the viewport. This is to ensure <VerticalTimeline> animation runs exactly once */}\n        <InView onChange={setInView} triggerOnce={true} delay={1250}>\n          <div style={{ display: \"none\" }}></div>\n        </InView>\n      </Container>\n      {/* </FadeReactReveal> */}\n    </Element>\n  );\n}\n\n// Hook to detect mobile devices\nfunction useMobileDeviceCheck() {\n  const [isMobileDevice, setIsMobileDevice] = useState(false);\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Detect if current device is mobile\n      setIsMobileDevice(!!navigator.maxTouchPoints);\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial device type\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return isMobileDevice;\n}\n","export default __webpack_public_path__ + \"static/media/TwitterUserProfiler.71776572.png\";","export default __webpack_public_path__ + \"static/media/LectureHallFinder.77ee1f73.png\";","export default __webpack_public_path__ + \"static/media/HotelReviewsAnalyzer.22ef1ada.jpg\";","export default __webpack_public_path__ + \"static/media/CityWeatherAnalytics.25a6d091.jpg\";","export default __webpack_public_path__ + \"static/media/StayHomeRewards.a01c788c.jpg\";","export default __webpack_public_path__ + \"static/media/BitcoinTestnetUtility.3ffa9b66.png\";","export default __webpack_public_path__ + \"static/media/ImageEditor.2fb724e3.png\";","export default __webpack_public_path__ + \"static/media/LibraryEPurchases.a9b7fc2e.jpeg\";","export default __webpack_public_path__ + \"static/media/PortfolioWebsite.b1046fb1.png\";","import React, { useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { useMediaQuery } from \"react-responsive\";\n// import Col from \"react-bootstrap/Col\";\n// import StackGrid, { transitions, easings } from \"react-stack-grid\";\n\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\n// import Card from \"react-bootstrap/Card\";\nimport { HoverCard } from \"react-png-hovercard\";\n// import Button from \"react-bootstrap/Button\";\n// import { Button } from '@progress/kendo-react-buttons';\nimport Button from \"@material-ui/core/Button\";\nimport { Fade, Slide, Zoom, Bounce } from \"react-awesome-reveal\";\n// import Grow from \"@material-ui/core/Grow\";\n// import FlipMove from \"react-flip-move\";\nimport uuid from \"react-uuid\";\n// import ProjectButton from \"./ProjectButton\"\n\n// import { AwesomeButton } from \"react-awesome-button\";\n// import \"react-awesome-button/dist/styles.css\";\nimport { ImSearch } from \"react-icons/im\";\n\nimport TwitterUserProfiler from \"./assets/images/TwitterUserProfiler.png\";\nimport LectureHallFinder from \"./assets/images/LectureHallFinder.png\";\nimport HotelReviewsAnalyzer from \"./assets/images/HotelReviewsAnalyzer.jpg\";\nimport CityWeatherAnalytics from \"./assets/images/CityWeatherAnalytics.jpg\";\nimport StayHomeRewards from \"./assets/images/StayHomeRewards.jpg\";\nimport BitcoinTestnetUtility from \"./assets/images/BitcoinTestnetUtility.png\";\nimport ImageEditor from \"./assets/images/ImageEditor.png\";\nimport LibraryEPurchases from \"./assets/images/LibraryEPurchases.jpeg\";\nimport PortfolioWebsite from \"./assets/images/PortfolioWebsite.png\";\n\nexport default function Projects() {\n  const fullStackAndWebProjects = [\n    {\n      name: \"Twitter User Profiler\",\n      miniTechStack: [\"Python\", \"Angular\", \"Redis\", \"NLP\"],\n      techStack: [\n        \"Python\",\n        \"Angular\",\n        \"Redis\",\n        \"NodeJS\",\n        \"Twitter API\",\n        \"Apache Spark/pyspark\",\n        \"NLP\",\n      ],\n      imageUrl: TwitterUserProfiler,\n      themeColor: \"rgb(23 118 162)\",\n      // color: \"rgb(36 129 172)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(36 129 172)\", color: \"white\" },\n    },\n    {\n      name: \"Lecture Hall Finder\",\n      miniTechStack: [\"Python\", \"Angular\", \"Redis\"],\n      techStack: [\"Python\", \"Angular\", \"Redis\", \"NodeJS\", \"Heroku\"],\n      imageUrl: LectureHallFinder,\n      themeColor: \"rgb(199 34 34)\",\n      // color: \"rgb(199 34 34)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(199 34 34)\", color: \"white\" },\n    },\n    {\n      name: \"Portfolio Website\",\n      miniTechStack: [\"React\"],\n      techStack: [\"React\", \"NodeJS\"],\n      imageUrl: PortfolioWebsite,\n      themeColor: \"rgb(74 79 74)\",\n    },\n  ];\n  const dataAnalyticsProjects = [\n    {\n      name: \"Twitter User Profiler\",\n      miniTechStack: [\"Python\", \"Angular\", \"Redis\", \"NLP\"],\n      techStack: [\n        \"Python\",\n        \"Angular\",\n        \"Redis\",\n        \"NodeJS\",\n        \"Twitter API\",\n        \"Apache Spark/pyspark\",\n        \"NLP\",\n      ],\n      imageUrl: TwitterUserProfiler,\n      themeColor: \"rgb(23 118 162)\",\n      // color: \"rgb(36 129 172)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(36 129 172)\", color: \"white\" },\n    },\n    {\n      name: \"Hotel Reviews Analyzer\",\n      miniTechStack: [\"Python\", \"Tableau\", \"NLP\"],\n      techStack: [\"Python\", \"Apache Spark/pyspark\", \"NLP\", \"Tableau\"],\n      imageUrl: HotelReviewsAnalyzer,\n      // themeColor: \"rgb(199 101 15)\",\n      themeColor: \"rgb(191 97 14)\",\n      // color: \"rgb(54 73 6)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(54 73 6)\", color: \"white\" },\n    },\n    {\n      name: \"City Weather Analytics\",\n      miniTechStack: [\"Python\", \"React\"],\n      techStack: [\"Python\", \"React\"],\n      // style: { backgroundColor: \"rgb(158 36 104)\", color: \"white\" },\n      imageUrl: CityWeatherAnalytics,\n      themeColor: \"rgb(158 36 104)\",\n      // color: \"rgb(158 36 104)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n  ];\n\n  const mobileAndOtherProjects = [\n    {\n      name: \"Stay Home Rewards\",\n      miniTechStack: [\"React Native\"],\n      techStack: [\"React Native\"],\n      // style: { backgroundColor: \"rgb(18 120 123)\", color: \"white\" },\n      imageUrl: StayHomeRewards,\n      themeColor: \"rgb(18 120 123)\",\n      // color: \"rgb(18 120 123)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n    {\n      name: \"Bitcoin Testnet Utility \",\n      miniTechStack: [\"Java\", \"BlockCypher API\"],\n      techStack: [\"Java\", \"BlockCypher API\", \"BlockChain\"],\n      // style: { backgroundColor: \"rgb(15 46 76)\", color: \"white\" },\n      imageUrl: BitcoinTestnetUtility,\n      themeColor: \"rgb(17 72 125)\",\n      // color: \"rgb(15 46 76)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n    {\n      name: \"Image Editor\",\n      miniTechStack: [\"Java\", \"JSwing\"],\n      techStack: [\"Java\", \"JSwing\"],\n      // style: { backgroundColor: \"rgb(19 128 55)\", color: \"white\" },\n      imageUrl: ImageEditor,\n      themeColor: \"rgb(19 128 55)\",\n      // color: \"rgb(19 128 55)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n    {\n      name: \"Library ePurchase\",\n      miniTechStack: [\"Java\", \"DB2\"],\n      techStack: [\"Java\", \"SQL/DB2\"],\n      // style: { backgroundColor: \"rgb(1 32 32)\", color: \"white\" },\n      imageUrl: LibraryEPurchases,\n      themeColor: \"rgb(91 54 36)\",\n      // color: \"rgb(1 32 32)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n  ];\n\n  const allProjectsWithDup = [\n    ...fullStackAndWebProjects,\n    ...dataAnalyticsProjects,\n    ...mobileAndOtherProjects,\n  ];\n\n  const allProjectsNoDup = new Set(\n    allProjectsWithDup.map((item) => JSON.stringify(item))\n  ); // remove duplicates from allProjectsWithDup\n  const allProjects = [...allProjectsNoDup].map((item) => JSON.parse(item)); // convert set back into an array\n\n  const buttonLabelsToProjects = {\n    All: allProjects,\n    \"Full Stack / Web\": fullStackAndWebProjects,\n    \"Data Analytics\": dataAnalyticsProjects,\n    \"Mobile & Other\": mobileAndOtherProjects,\n  };\n\n  const [projectType, setProjectType] = useState(\"All\");\n  const [projectCards, setProjectCards] = useState(allProjects);\n  const [cardBorder, setCardBorder] = useState(false);\n  const isExtraSmallScreenWidth = useMediaQuery({\n    query: \"(max-width: 439px)\",\n  });\n\n  // const [reverseAnimation, setReverseAnimation] = useState(false)\n\n  // const { helix } = transitions;\n  // const { flip } = transitions;\n  // const { scaleDown } = transitions;\n\n  // check if a json object exists in a jsonArr\n  // const jsonExists = (json, jsonArr) => {\n  //   for (let i = 0; i < jsonArr.length; i++) {\n  //     //iterate through each object in an array\n  //     if (JSON.stringify(jsonArr[i]) === JSON.stringify(json)) {\n  //       return true;\n  //     }\n  //   }\n  // };\n\n  // const getNewProjectCards = (newProjectType) => {\n  //   let newProjectCards = projectCards;\n  //   console.log(newProjectCards);\n  //   console.log(buttonLabelsToProjects[newProjectType]);\n  //   newProjectCards = newProjectCards.filter((el) =>\n  //     jsonExists(el, buttonLabelsToProjects[newProjectType])\n  //   );\n  //   console.log(newProjectCards);\n  //   return newProjectCards;\n  // };\n\n  // const getNewProjectCards = (newProjectType) => {\n  //   let currentProjectCards = projectCards;\n  //   let newProjectCards = buttonLabelsToProjects[newProjectType];\n\n  //   console.log(currentProjectCards);\n  //   console.log(newProjectCards);\n  //   currentProjectCards = currentProjectCards.filter((el) =>\n  //     jsonExists(el, newProjectCards)\n  //   );\n  //   currentProjectCards = newProjectCards.filter((el) =>\n  //     jsonExists(el, currentProjectCards)\n  //   );\n  //   console.log(newProjectCards);\n  //   return newProjectCards;\n  // };\n\n  const handleProjectTypeChange = (event, newProjectType) => {\n    //only set new value if current project label button value is different than the newly clicked button value\n    if (newProjectType && event.target.innerText !== projectType) {\n      // setReverseAnimation(true);\n      setProjectType(newProjectType);\n      setProjectCards(buttonLabelsToProjects[newProjectType]);\n      // setProjectCards(getNewProjectCards(newProjectType));\n      // setReverseAnimation(false);\n    }\n  };\n  return (\n    <Element\n      name=\"projects\"\n      className=\"with-navbar-component\"\n      // style={{ backgroundColor: \"rgb(232 232 232)\" }}\n      // style={{ backgroundColor: \"black\" }}\n    >\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <h4>Projects</h4>\n        </Row>\n        <Row\n          className=\"justify-content-center\"\n          style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\n        >\n          <ToggleButtonGroup\n            value={projectType}\n            exclusive\n            // size=\"large\"\n            onChange={handleProjectTypeChange}\n            // style={{ fontSize: isExtraSmallScreenWidth ? \"4vw\" : \"0.9em\" }}\n            // className=\"projects-buttons\"\n          >\n            {Object.keys(buttonLabelsToProjects).map(\n              (projectTypeToggleButton, index) => {\n                return (\n                  <ToggleButton\n                    disableRipple\n                    value={projectTypeToggleButton}\n                    key={index}\n                    className=\"project-toggle-button\"\n                    style={{\n                      padding: isExtraSmallScreenWidth\n                        ? \"6px 15px 6px 15px\"\n                        : \"10px 25px 10px 25px\",\n                      fontSize: isExtraSmallScreenWidth ? \"3.5vw\" : \"0.92rem\",\n                    }}\n                  >\n                    {projectTypeToggleButton}\n                  </ToggleButton>\n                );\n              }\n            )}\n          </ToggleButtonGroup>\n        </Row>\n        {/* <Zoom> */}\n        <Row\n          // md={4}\n          // style={{ paddingTop: \"25px\" }}\n          className=\"justify-content-center\"\n          // style={{ backgroundColor: \"rgb(232 232 232)\" }}\n          // style={{backgroundColor: \"gray\"}}\n        >\n          <Zoom\n            cascade={true}\n            damping={0.15}\n            triggerOnce={true}\n            style={{ display: \"block\", padding: \"7px 18px 7px 18px\" }}\n          >\n            {projectCards.map((projectCard, index) => {\n              return (\n                <HoverCard\n                  key={uuid()}\n                  style={{\n                    // backgroundColor: \"white\",\n                    // backgroundColor: projectCard.themeColor,\n                    color: \"white\",\n                    // width: \"25rem\",\n                    width: isExtraSmallScreenWidth ? \"90vw\" : \"24.59rem\",\n                    maxHeight: \"285px\",\n                  }}\n                  front={\n                    <div\n                      style={{\n                        backgroundColor: projectCard.themeColor,\n                        width: \"inherit\",\n                        // border: cardBorder ? \"1px solid black\" : \"\",\n                      }}\n                      // onMouseEnter={() => setCardBorder(true)}\n                      // onMouseLeave={() => setCardBorder(false)}\n                    >\n                      <img\n                        src={projectCard.imageUrl}\n                        alt={projectCard.name}\n                        style={{\n                          width: \"100%\",\n                          height: \"233px\",\n                          objectFit: \"cover\",\n                          objectPosition:\n                            projectCard.name === \"Stay Home Rewards\"\n                              ? \"0 0\"\n                              : \"center\",\n                        }}\n                      ></img>\n                      <div\n                        style={{\n                          textAlign: \"center\",\n                          padding: \"0.75rem 0rem 0.2rem 0rem\",\n                          fontWeight: \"500\",\n                        }}\n                      >\n                        {projectCard.name}\n                      </div>\n                    </div>\n                  }\n                  back={\n                    <div\n                      className=\"justify-content-center\"\n                      style={{\n                        display: \"flex\",\n                        alignContent: \"center\",\n                        alignItems: \"center\",\n                        flexDirection: \"column\",\n                        width: \"inherit\",\n                        backgroundColor: \"rgb(249 249 249)\",\n                        // border: \"1px solid \" + projectCard.themeColor,\n                        border: isExtraSmallScreenWidth\n                          ? \"\"\n                          : \"1px solid \" + projectCard.themeColor,\n                        // borderRight: isExtraSmallScreenWidth ? \"1px solid \" + projectCard.themeColor : \"1px solid \" + projectCard.themeColor,\n                        // borderRight: \"1px solid black\",\n                        // backgroundColor: projectCard.themeColor,\n                        // backgroundImage: \"url(\" + projectCard.imageUrl + \")\",\n                        // backgroundSize: \"cover\",\n                        // backgroundPosition: \"center\",\n                        // opacity: 0.75,\n                        // height: \"245px\",\n                        // objectFit: \"cover\",\n                        // objectPosition: \"0 0\",\n                      }}\n                    >\n                      <p\n                        style={{\n                          color: projectCard.themeColor,\n                          fontSize: \"large\",\n                          fontWeight: \"550\",\n                        }}\n                      >\n                        {projectCard.name}\n                      </p>\n                      <p\n                        style={{\n                          // color:\"white\",\n                          color: projectCard.themeColor,\n                          fontWeight: \"500\",\n                          fontSize: \"1.05rem\",\n                        }}\n                      >\n                        {projectCard.miniTechStack.map((tech, index) => {\n                          return (\n                            <span>\n                              {index === projectCard.miniTechStack.length - 1\n                                ? tech\n                                : tech + \" / \"}\n                            </span>\n                          );\n                        })}\n                      </p>\n                      {/* <br />\n                      <br /> */}\n                      {/* <div style={{marginTop: \"45px\"}}> */}\n                      {/* <ProjectButton name={projectCard.name} themeColor={projectCard.themeColor}></ProjectButton> */}\n                      <Button\n                        className=\"project-card-button\"\n                        // size=\"large\"\n                        // size=\"lg\"\n                        // variant=\"info\"\n                        style={{\n                          // backgroundColor: hoveredCardButton === projectCard.name ? projectCard.themeColor :  \"rgb(249 249 249)\",\n                          // color: hoveredCardButton === projectCard.name ? \"rgb(249 249 249)\" : projectCard.themeColor,\n                          backgroundColor: projectCard.themeColor,\n                          color: \"rgb(249, 249, 249)\",\n                          borderRadius: \"5%\",\n                          border: \"2px solid \" + projectCard.themeColor,\n                          fontFamily: \"monospace\",\n                          marginTop: \"25px\",\n                          paddingLeft: \"25px\",\n                          paddingRight: \"25px\",\n                          // transform: \"rotateX(0deg)\"\n                          // marginTop: \"45px\"\n                        }}\n                        // onMouseEnter={() => changeButtonColor(projectCard.name)}\n                        // onMouseLeave={() => changeButtonColor(\"\")}\n                      >\n                        {/* <span>Learn More</span> */}\n                        <span\n                          style={{ textTransform: \"none\", fontSize: \"1.1rem\" }}\n                        >\n                          Learn More\n                          {/* <span><ImSearch></ImSearch></span> */}\n                        </span>\n                        {/* <div style={{marginBottom: \"5px\", marginLeft: \"10px\", fontSize: \"1.1rem\"}}>\n                          <span><ImSearch></ImSearch></span>\n                        </div> */}\n                      </Button>\n                      {/* <AwesomeButton\n                        type=\"primary\"\n                        style={{\n                          // backgroundColor: hoveredCardButton === projectCard.name ? projectCard.themeColor :  \"rgb(249 249 249)\",\n                          // color: hoveredCardButton === projectCard.name ? \"rgb(249 249 249)\" : projectCard.themeColor,\n                          backgroundColor: projectCard.color,\n                          color: projectCard.backgroundColor,\n                          borderRadius: \"5%\",\n                          border: \"2px solid \" + projectCard.themeColor,\n                          fontFamily: \"monospace\",\n                          paddingLeft: \"30px\",\n                          paddingRight: \"30px\",\n                          // transform: \"rotateX(0deg)\"\n                          // marginTop: \"45px\"\n                        }}\n                      >\n                        Learn More\n                      </AwesomeButton> */}\n                      {/* </div> */}\n                      {/* <div\n                        style={{\n                          backgroundImage: \"url(\" + projectCard.imageUrl + \")\",\n                          backgroundSize: \"cover\",\n                          backgroundPosition: \"center\",\n                          opacity: 0.5,\n                        }}\n                      >\n                      </div> */}\n                      {/* <h6 align=\"center\">lol</h6> */}\n                    </div>\n                  }\n                  // maxWidth={416}\n                  // maxWidth={isExtraSmallScreenWidth ? \"100%\" : 416}\n                  animationSpeed={600}\n                  height={300}\n                  // margin={9}\n                />\n                // <Card\n                //   key={uuid()}\n                //   style={projectCard.style}\n                //   className=\"project-card\"\n                // >\n                //   <div>\n                //     <img\n                //       src={projectCard.imageUrl}\n                //       alt={projectCard.name}\n                //       style={{\n                //         width: \"100%\",\n                //         height: \"245px\",\n                //         objectFit: \"cover\",\n                //         objectPosition: \"0 0\",\n                //       }}\n                //     ></img>\n                //     <div\n                //       align=\"center\"\n                //       style={{\n                //         padding: \"0.8rem 0rem 0.8rem 0rem\",\n                //         fontWeight: \"500\",\n                //       }}\n                //     >\n                //       {projectCard.name}\n                //     </div>\n                //   </div>\n                // </Card>\n              );\n            })}\n          </Zoom>\n          {/* </div> */}\n          {/* </StackGrid> */}\n          {/* <Card.Text>\n          {projectCard.miniTechStack.map((tech, index) => {\n            return (<span>{index === projectCard.miniTechStack.length - 1 ? tech : tech + \" / \"}</span>);\n          })}\n        </Card.Text>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"project-card-button\"\n        >\n          Go somewhere\n        </Button> */}\n        </Row>\n        {/* </Zoom> */}\n      </Container>\n    </Element>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar\";\nimport { Element } from \"react-scroll\";\nimport { Rings } from \"svg-loaders-react\";\n\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Timeline from \"./Timeline\";\nimport Projects from \"./Projects\"\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  // const [homeCompHeight, setHomeCompHeight] = useState(0)\n  // const ref = useRef(null)\n  // const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' })\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const changeBackgroundColor = (color) => {\n    document.body.style = \"background:\" + color;\n  };\n\n  return !loading ? (\n    <div className=\"App\">\n      {changeBackgroundColor(\"black\")}\n      <Home />\n      {/* {isTabletOrMobile ? <Headroom pinStart={600}><NavBar /></Headroom> : <NavBar />} */}\n      <NavBar />\n      <About />\n      <Timeline />\n      <Projects />\n      <Element name=\"jisoo\" className=\"jisoo\">\n        <img\n          src=\"https://wallpapercave.com/wp/wp2118314.jpg\"\n          alt=\"sana\"\n          style={{ height: \"auto\", width: \"100%\" }}\n        ></img>\n      </Element>\n\n      <Element name=\"joy\" className=\"joy\">\n        <img\n          src=\"https://www.xtrafondos.com/wallpapers/taeyeon-cantante-de-kpop-4248.jpg\"\n          alt=\"sana\"\n          style={{ height: \"inherit\", width: \"100%\" }}\n        ></img>\n      </Element>\n    </div>\n  ) : (\n    <div\n      className=\"App\"\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      {changeBackgroundColor(\"black\")}\n      <Rings />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}