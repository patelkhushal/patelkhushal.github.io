[{"/Users/patelkhushal@ibm.com/portfolio/src/index.js":"1","/Users/patelkhushal@ibm.com/portfolio/src/App.js":"2","/Users/patelkhushal@ibm.com/portfolio/src/reportWebVitals.js":"3","/Users/patelkhushal@ibm.com/portfolio/src/NavBar.js":"4","/Users/patelkhushal@ibm.com/portfolio/src/Home.js":"5","/Users/patelkhushal@ibm.com/portfolio/src/ParticlesComp.js":"6","/Users/patelkhushal@ibm.com/portfolio/src/About.js":"7","/Users/patelkhushal@ibm.com/portfolio/src/Timeline.js":"8","/Users/patelkhushal@ibm.com/portfolio/src/Projects.js":"9","/Users/patelkhushal@ibm.com/portfolio/src/ProjectButton.js":"10","/Users/patelkhushal@ibm.com/portfolio/src/Loader.js":"11"},{"size":547,"mtime":1608448147275,"results":"12","hashOfConfig":"13"},{"size":1829,"mtime":1611113172237,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607507590524,"results":"15","hashOfConfig":"13"},{"size":2577,"mtime":1610168532695,"results":"16","hashOfConfig":"13"},{"size":5294,"mtime":1611098351990,"results":"17","hashOfConfig":"13"},{"size":2873,"mtime":1609660789002,"results":"18","hashOfConfig":"13"},{"size":10263,"mtime":1611099412394,"results":"19","hashOfConfig":"13"},{"size":6599,"mtime":1611099694415,"results":"20","hashOfConfig":"13"},{"size":19040,"mtime":1611118036784,"results":"21","hashOfConfig":"13"},{"size":1090,"mtime":1611034379465,"results":"22","hashOfConfig":"23"},{"size":488,"mtime":1611113058795,"results":"24","hashOfConfig":"23"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1r6lpr4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qypc72",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patelkhushal@ibm.com/portfolio/src/index.js",[],["52","53"],"/Users/patelkhushal@ibm.com/portfolio/src/App.js",["54"],"import { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./NavBar\";\nimport { Element } from \"react-scroll\";\nimport { Rings } from \"svg-loaders-react\";\n\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Timeline from \"./Timeline\";\nimport Projects from \"./Projects\"\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  // const [homeCompHeight, setHomeCompHeight] = useState(0)\n  // const ref = useRef(null)\n  // const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' })\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const changeBackgroundColor = (color) => {\n    document.body.style = \"background:\" + color;\n  };\n\n  return !loading ? (\n    <div className=\"App\">\n      {changeBackgroundColor(\"black\")}\n      <Home />\n      {/* {isTabletOrMobile ? <Headroom pinStart={600}><NavBar /></Headroom> : <NavBar />} */}\n      <NavBar />\n      <About />\n      <Timeline />\n      <Projects />\n      <Element name=\"jisoo\" className=\"jisoo\">\n        <img\n          src=\"https://wallpapercave.com/wp/wp2118314.jpg\"\n          alt=\"sana\"\n          style={{ height: \"auto\", width: \"100%\" }}\n        ></img>\n      </Element>\n\n      <Element name=\"joy\" className=\"joy\">\n        <img\n          src=\"https://www.xtrafondos.com/wallpapers/taeyeon-cantante-de-kpop-4248.jpg\"\n          alt=\"sana\"\n          style={{ height: \"inherit\", width: \"100%\" }}\n        ></img>\n      </Element>\n    </div>\n  ) : (\n    <div\n      className=\"App\"\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      {changeBackgroundColor(\"black\")}\n      <Rings />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/patelkhushal@ibm.com/portfolio/src/reportWebVitals.js",[],"/Users/patelkhushal@ibm.com/portfolio/src/NavBar.js",[],"/Users/patelkhushal@ibm.com/portfolio/src/Home.js",["55","56"],"import React, { useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport { useMediaQuery } from 'react-responsive'\nimport Container from \"react-bootstrap/Container\";\n// import Typing from \"react-typing-animation\";\nimport { scroller } from \"react-scroll\";\nimport { Link } from \"react-scroll\";\nimport Button from \"react-bootstrap/Button\";\n\nimport Bounce from \"react-reveal/Bounce\";\nimport Fade from \"react-reveal/Fade\";\nimport Pulse from \"react-reveal/Pulse\";\n\nimport ParticlesComp from \"./ParticlesComp\";\n\nimport Grow from \"@material-ui/core/Grow\";\n// import Collapse from \"@material-ui/core/Collapse\";\n// import Fade from \"@material-ui/core/Fade\";\n// import Slide from \"@material-ui/core/Slide\";\n// import Zoom from \"@material-ui/core/Zoom\";\n\nimport {\n  AiFillAppstore,\n  AiFillLinkedin,\n  AiFillGithub,\n  AiOutlineArrowRight,\n} from \"react-icons/ai\";\nimport { RiUser3Fill, RiStackFill, RiFootprintFill } from \"react-icons/ri\";\nimport { IoMdChatbubbles } from \"react-icons/io\";\nimport { HiMail } from \"react-icons/hi\";\nimport HomeBackgroundImage from './assets/images/HomeBackgroundImage.jpg';\n\nexport default function Home() {\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 991px)' })\n  const linkElements = [\"about\", \"timeline\", \"projects\", \"jisoo\", \"joy\"];\n  const iconLabels = [\"About\", \"Timeline\", \"Projects\", \"Skills\", \"Contact\"];\n  const linkElementsIcons = [\n    RiUser3Fill,\n    RiFootprintFill,\n    AiFillAppstore,\n    RiStackFill,\n    IoMdChatbubbles,\n  ];\n\n  const IconTag = (iconIndex) => {\n    return React.createElement(linkElementsIcons[iconIndex], null, \"\");\n  };\n\n  return (\n    <Element name=\"home\" className=\"home\">\n      <Grow in={true} timeout={1000}>\n        <Container\n          fluid\n          className=\"justify-content-center\"\n          style={{\n            paddingLeft: 0,\n            paddingRight: 0,\n            height: \"100vh\",\n            position: \"relative\",\n            // height: \"93.11vh\",\n            // display: \"block\",\n          }}\n        >\n          {/* <ParticlesComp /> */}\n          <div id=\"home-background\" style={{backgroundImage: \"url(\" + HomeBackgroundImage + \")\"}}></div>\n          <Fade left delay={2200}>\n            <div id=\"side-nav\">\n              {linkElements.map((linkElementName, index) => {\n                return (\n                  <div className=\"side-nav-icon-container\" key={index}>\n                    <Link\n                      className=\"side-nav-item zoom\"\n                      to={linkElementName}\n                      smooth={true}\n                      duration={500}\n                      offset={-55}\n                    >\n                      <div>{IconTag(index)}</div>\n                    </Link>\n                    <div className=\"side-nav-item-text\">\n                      {iconLabels[index]}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </Fade>\n          <Container id=\"type-greeting-container\">\n            <Bounce top delay={900}>\n              <div style={{ textAlign: \"center\" }}>\n                <p>\n                  Hello! My name is{\" \"}\n                  <span id=\"greeting-name\">Khushal Patel</span>\n                </p>\n                <p>I'm a Software Dev :)</p>\n              </div>\n            </Bounce>\n            <Fade left delay={1900}>\n              <div>\n                <Pulse forever={true}>\n                  <div style={{ paddingBottom: \"20px\" }}>\n                    <Button\n                      id=\"more-button\"\n                      size=\"lg\"\n                      // variant=\"info\"\n                      onClick={() => {\n                        scroller.scrollTo(\"about\", {\n                          smooth: true,\n                          offset: isTabletOrMobile? -50 : -65,\n                          duration: 500,\n                        });\n                      }}\n                    >\n                      Learn More{\" \"}\n                      <span id=\"more-button-arrow\">\n                        <AiOutlineArrowRight />\n                      </span>\n                    </Button>\n                  </div>\n                </Pulse>\n              </div>\n            </Fade>\n          </Container>\n          <Fade right delay={2200}>\n            <div id=\"bottom-bar-contact\">\n              <div className=\"side-nav-icon-container\">\n                <span className=\"side-nav-item zoom\">\n                  <AiFillLinkedin />\n                </span>\n              </div>\n              <div className=\"side-nav-icon-container\">\n                <span className=\"side-nav-item zoom\">\n                  <AiFillGithub />\n                </span>\n              </div>\n              <div className=\"side-nav-icon-container\">\n                <span className=\"side-nav-item zoom\">\n                  <HiMail />\n                </span>\n              </div>\n            </div>\n          </Fade>\n        </Container>\n      </Grow>\n    </Element>\n  );\n}\n\n//   <Typing speed={2} onFinishedTyping={() => renderArrow()}>\n//   <Typing.Delay ms={1000} />\n//   <div style={{ minHeight: \"128px\", textAlign: \"center\" }}>\n//     <p>\n//       Hello! My name is{\" \"}\n//       <span id=\"greeting-name\">Khushal Patel</span>\n//     </p>\n//     <p>I'm a Software Dev :)</p>\n//   </div>\n// </Typing>\n","/Users/patelkhushal@ibm.com/portfolio/src/ParticlesComp.js",["57"],"import React from 'react'\nimport Particles from \"react-tsparticles\";\n\nexport default function ParticlesComp() {\n    return (\n      <div id=\"tsparticles\"></div>\n      //   <Particles\n      //   id=\"tsparticles\"\n      //   options={{\n      //     fpsLimit: 30,\n      //     interactivity: {\n      //       detectsOn: \"canvas\",\n      //       events: {\n      //         onClick: {\n      //           enable: false,\n      //           mode: \"push\",\n      //         },\n      //         onHover: {\n      //           enable: false,\n      //           mode: \"push\",\n      //         },\n      //         resize: true,\n      //       },\n      //       modes: {\n      //         bubble: {\n      //           distance: 400,\n      //           duration: 2,\n      //           opacity: 0.5,\n      //           size: 40,\n      //         },\n      //         push: {\n      //           quantity: 4,\n      //         },\n      //         repulse: {\n      //           distance: 200,\n      //           duration: 0.4,\n      //         },\n      //       },\n      //     },\n      //     particles: {\n      //       number: {\n      //         value: 90,\n      //         density: {\n      //           enable: true,\n      //           value_area: 315,\n      //         },\n      //       },\n      //       color: {\n      //         value: \"#ffffff\",\n      //       },\n      //       shape: {\n      //         type: \"circle\",\n      //         stroke: {\n      //           width: 0,\n      //           color: \"#000000\",\n      //         },\n      //         polygon: {\n      //           nb_sides: 5,\n      //         },\n      //       },\n      //       opacity: {\n      //         value: 1.0,\n      //         random: true,\n      //         anim: {\n      //           enable: true,\n      //           speed: 0.1,\n      //           opacity_min: 0.2,\n      //           sync: false,\n      //         },\n      //       },\n      //       size: {\n      //         value: 3,\n      //         random: true,\n      //         anim: {\n      //           enable: true,\n      //           speed: 1,\n      //           size_min: 0.1,\n      //           sync: false,\n      //         },\n      //       },\n      //       line_linked: {\n      //         enable: false,\n      //         distance: 150,\n      //         color: \"#ffffff\",\n      //         opacity: 0.4,\n      //         width: 1,\n      //       },\n      //       move: {\n      //         enable: true,\n      //         speed: 1.5,\n      //         direction: \"none\",\n      //         random: true,\n      //         straight: false,\n      //         out_mode: \"out\",\n      //         bounce: false,\n      //         attract: {\n      //           enable: false,\n      //           rotateX: 600,\n      //           rotateY: 1200,\n      //         },\n      //       },\n      //     },\n      //     detectRetina: true,\n      //   }}\n      // />\n    )\n}\n","/Users/patelkhushal@ibm.com/portfolio/src/About.js",[],"/Users/patelkhushal@ibm.com/portfolio/src/Timeline.js",[],"/Users/patelkhushal@ibm.com/portfolio/src/Projects.js",["58","59","60","61"],"import React, { useState } from \"react\";\nimport { Element } from \"react-scroll\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { useMediaQuery } from \"react-responsive\";\n// import Col from \"react-bootstrap/Col\";\n// import StackGrid, { transitions, easings } from \"react-stack-grid\";\n\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\n// import Card from \"react-bootstrap/Card\";\nimport { HoverCard } from \"react-png-hovercard\";\n// import Button from \"react-bootstrap/Button\";\n// import { Button } from '@progress/kendo-react-buttons';\nimport Button from \"@material-ui/core/Button\";\nimport { Fade, Slide, Zoom, Bounce } from \"react-awesome-reveal\";\n// import Grow from \"@material-ui/core/Grow\";\n// import FlipMove from \"react-flip-move\";\nimport uuid from \"react-uuid\";\n// import ProjectButton from \"./ProjectButton\"\n\n// import { AwesomeButton } from \"react-awesome-button\";\n// import \"react-awesome-button/dist/styles.css\";\nimport { ImSearch } from \"react-icons/im\"\n\nimport TwitterUserProfiler from './assets/images/TwitterUserProfiler.png';\nimport LectureHallFinder from './assets/images/LectureHallFinder.png';\nimport HotelReviewsAnalyzer from './assets/images/HotelReviewsAnalyzer.jpg';\nimport CityWeatherAnalytics from './assets/images/CityWeatherAnalytics.jpg';\nimport StayHomeRewards from './assets/images/StayHomeRewards.jpg';\nimport BitcoinTestnetUtility from './assets/images/BitcoinTestnetUtility.png';\nimport ImageEditor from './assets/images/ImageEditor.png';\nimport LibraryEPurchases from './assets/images/LibraryEPurchases.jpeg'\nimport PortfolioWebsite from './assets/images/PortfolioWebsite.png'\n\nexport default function Projects() {\n  const fullStackAndWebProjects = [\n    {\n      name: \"Twitter User Profiler\",\n      miniTechStack: [\"Python\", \"Angular\", \"Redis\", \"NLP\"],\n      techStack: [\n        \"Python\",\n        \"Angular\",\n        \"Redis\",\n        \"NodeJS\",\n        \"Twitter API\",\n        \"Apache Spark/pyspark\",\n        \"NLP\",\n      ],\n      imageUrl: TwitterUserProfiler,\n      themeColor: \"rgb(23 118 162)\",\n      // color: \"rgb(36 129 172)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(36 129 172)\", color: \"white\" },\n    },\n    {\n      name: \"Lecture Hall Finder\",\n      miniTechStack: [\"Python\", \"Angular\", \"Redis\"],\n      techStack: [\"Python\", \"Angular\", \"Redis\", \"NodeJS\", \"Heroku\"],\n      imageUrl: LectureHallFinder,\n      themeColor: \"rgb(199 34 34)\",\n      // color: \"rgb(199 34 34)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(199 34 34)\", color: \"white\" },\n    },\n    {\n      name: \"Portfolio Website\",\n      miniTechStack: [\"React\"],\n      techStack: [\"React\", \"NodeJS\"],\n      imageUrl: PortfolioWebsite,\n      themeColor: \"rgb(74 79 74)\",\n    }\n  ];\n  const dataAnalyticsProjects = [\n    {\n      name: \"Twitter User Profiler\",\n      miniTechStack: [\"Python\", \"Angular\", \"Redis\", \"NLP\"],\n      techStack: [\n        \"Python\",\n        \"Angular\",\n        \"Redis\",\n        \"NodeJS\",\n        \"Twitter API\",\n        \"Apache Spark/pyspark\",\n        \"NLP\",\n      ],\n      imageUrl: TwitterUserProfiler,\n      themeColor: \"rgb(23 118 162)\",\n      // color: \"rgb(36 129 172)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(36 129 172)\", color: \"white\" },\n    },\n    {\n      name: \"Hotel Reviews Analyzer\",\n      miniTechStack: [\"Python\", \"Tableau\", \"NLP\"],\n      techStack: [\"Python\", \"Apache Spark/pyspark\", \"NLP\", \"Tableau\"],\n      imageUrl: HotelReviewsAnalyzer,\n      themeColor: \"rgb(142 52 10)\",\n      // color: \"rgb(54 73 6)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n      // style: { backgroundColor: \"rgb(54 73 6)\", color: \"white\" },\n    },\n    {\n      name: \"City Weather Analytics\",\n      miniTechStack: [\"Python\", \"React\"],\n      techStack: [\"Python\", \"React\"],\n      // style: { backgroundColor: \"rgb(158 36 104)\", color: \"white\" },\n      imageUrl: CityWeatherAnalytics,\n      themeColor: \"rgb(158 36 104)\",\n      // color: \"rgb(158 36 104)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n  ];\n\n  const mobileAndOtherProjects = [\n    {\n      name: \"Stay Home Rewards\",\n      miniTechStack: [\"React Native\"],\n      techStack: [\"React Native\"],\n      // style: { backgroundColor: \"rgb(18 120 123)\", color: \"white\" },\n      imageUrl: StayHomeRewards,\n      themeColor: \"rgb(18 120 123)\",\n      // color: \"rgb(18 120 123)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n    {\n      name: \"Bitcoin Testnet Utility \",\n      miniTechStack: [\"Java\", \"BlockCypher API\"],\n      techStack: [\"Java\", \"BlockCypher API\", \"BlockChain\"],\n      // style: { backgroundColor: \"rgb(15 46 76)\", color: \"white\" },\n      imageUrl: BitcoinTestnetUtility,\n      themeColor: \"rgb(17 72 125)\",\n      // color: \"rgb(15 46 76)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n    {\n      name: \"Image Editor\",\n      miniTechStack: [\"Java\", \"JSwing\"],\n      techStack: [\"Java\", \"JSwing\"],\n      // style: { backgroundColor: \"rgb(19 128 55)\", color: \"white\" },\n      imageUrl: ImageEditor,\n      themeColor: \"rgb(19 128 55)\",\n      // color: \"rgb(19 128 55)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n    {\n      name: \"Library ePurchase\",\n      miniTechStack: [\"Java\", \"DB2\"],\n      techStack: [\"Java\", \"SQL/DB2\"],\n      // style: { backgroundColor: \"rgb(1 32 32)\", color: \"white\" },\n      imageUrl: LibraryEPurchases,\n      themeColor: \"rgb(91 54 36)\",\n      // color: \"rgb(1 32 32)\",\n      // backgroundColor: \"rgb(249 249 249)\",\n    },\n  ];\n\n  const allProjectsWithDup = [\n    ...fullStackAndWebProjects,\n    ...dataAnalyticsProjects,\n    ...mobileAndOtherProjects,\n  ];\n\n  const allProjectsNoDup = new Set(\n    allProjectsWithDup.map((item) => JSON.stringify(item))\n  ); // remove duplicates from allProjectsWithDup\n  const allProjects = [...allProjectsNoDup].map((item) => JSON.parse(item)); // convert set back into an array\n\n  const buttonLabelsToProjects = {\n    All: allProjects,\n    \"Full Stack / Web\": fullStackAndWebProjects,\n    \"Data Analytics\": dataAnalyticsProjects,\n    \"Mobile & Other\": mobileAndOtherProjects,\n  };\n\n  const [projectType, setProjectType] = useState(\"All\");\n  const [projectCards, setProjectCards] = useState(allProjects);\n  const isExtraSmallScreenWidth = useMediaQuery({\n    query: \"(max-width: 439px)\",\n  });\n\n  // const [reverseAnimation, setReverseAnimation] = useState(false)\n\n  // const { helix } = transitions;\n  // const { flip } = transitions;\n  // const { scaleDown } = transitions;\n\n  // check if a json object exists in a jsonArr\n  // const jsonExists = (json, jsonArr) => {\n  //   for (let i = 0; i < jsonArr.length; i++) {\n  //     //iterate through each object in an array\n  //     if (JSON.stringify(jsonArr[i]) === JSON.stringify(json)) {\n  //       return true;\n  //     }\n  //   }\n  // };\n\n  // const getNewProjectCards = (newProjectType) => {\n  //   let newProjectCards = projectCards;\n  //   console.log(newProjectCards);\n  //   console.log(buttonLabelsToProjects[newProjectType]);\n  //   newProjectCards = newProjectCards.filter((el) =>\n  //     jsonExists(el, buttonLabelsToProjects[newProjectType])\n  //   );\n  //   console.log(newProjectCards);\n  //   return newProjectCards;\n  // };\n\n  // const getNewProjectCards = (newProjectType) => {\n  //   let currentProjectCards = projectCards;\n  //   let newProjectCards = buttonLabelsToProjects[newProjectType];\n\n  //   console.log(currentProjectCards);\n  //   console.log(newProjectCards);\n  //   currentProjectCards = currentProjectCards.filter((el) =>\n  //     jsonExists(el, newProjectCards)\n  //   );\n  //   currentProjectCards = newProjectCards.filter((el) =>\n  //     jsonExists(el, currentProjectCards)\n  //   );\n  //   console.log(newProjectCards);\n  //   return newProjectCards;\n  // };\n\n  const handleProjectTypeChange = (event, newProjectType) => {\n    //only set new value if current project label button value is different than the newly clicked button value\n    if (newProjectType && event.target.innerText !== projectType) {\n      // setReverseAnimation(true);\n      setProjectType(newProjectType);\n      setProjectCards(buttonLabelsToProjects[newProjectType]);\n      // setProjectCards(getNewProjectCards(newProjectType));\n      // setReverseAnimation(false);\n    }\n  };\n  return (\n    <Element\n      name=\"projects\"\n      className=\"with-navbar-component\"\n      // style={{ backgroundColor: \"rgb(232 232 232)\" }}\n      // style={{ backgroundColor: \"black\" }}\n    >\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <h4>Projects</h4>\n        </Row>\n        <Row\n          className=\"justify-content-center\"\n          style={{ paddingTop: \"25px\", paddingBottom: \"20px\" }}\n        >\n          <ToggleButtonGroup\n            value={projectType}\n            exclusive\n            // size=\"large\"\n            onChange={handleProjectTypeChange}\n            // style={{ fontSize: isExtraSmallScreenWidth ? \"4vw\" : \"0.9em\" }}\n            // className=\"projects-buttons\"\n          >\n            {Object.keys(buttonLabelsToProjects).map(\n              (projectTypeToggleButton, index) => {\n                return (\n                  <ToggleButton\n                    disableRipple\n                    value={projectTypeToggleButton}\n                    key={index}\n                    className=\"project-toggle-button\"\n                    style={{ padding: isExtraSmallScreenWidth ? \"6px 15px 6px 15px\" : \"10px 25px 10px 25px\", fontSize: isExtraSmallScreenWidth ? \"3.5vw\" : \"0.9rem\" }}\n                  >\n                    {projectTypeToggleButton}\n                  </ToggleButton>\n                );\n              }\n            )}\n          </ToggleButtonGroup>\n        </Row>\n        {/* <Zoom> */}\n        <Row\n          // md={4}\n          // style={{ paddingTop: \"25px\" }}\n          className=\"justify-content-center\"\n          // style={{ backgroundColor: \"rgb(232 232 232)\" }}\n          // style={{backgroundColor: \"gray\"}}\n        >\n          <Zoom\n            cascade={true}\n            damping={0.15}\n            triggerOnce={true}\n            style={{ display: \"inline-block\", padding: \"5px 15px 5px 15px\" }}\n          >\n            {projectCards.map((projectCard, index) => {\n              return (\n                <HoverCard\n                  key={uuid()}\n                  style={{\n                    // backgroundColor: \"white\",\n                    backgroundColor: projectCard.themeColor,\n                    color: \"white\",\n                    // width: \"25rem\",\n                    width: isExtraSmallScreenWidth ? \"90vw\" : \"24.5rem\",\n                    maxHeight: \"290px\",\n                  }}\n                  className=\"project-card\"\n                  front={\n                    <div>\n                      <img\n                        src={projectCard.imageUrl}\n                        alt={projectCard.name}\n                        style={{\n                          width: \"100%\",\n                          height: \"235px\",\n                          objectFit: \"cover\",\n                          objectPosition:\n                            projectCard.name === \"Stay Home Rewards\"\n                              ? \"0 0\"\n                              : \"center\",\n                        }}\n                      ></img>\n                      <div\n                        align=\"center\"\n                        style={{\n                          padding: \"0.8rem 0rem 0.8rem 0rem\",\n                          fontWeight: \"500\",\n                        }}\n                      >\n                        {projectCard.name}\n                      </div>\n                    </div>\n                  }\n                  back={\n                    <div\n                      style={{\n                        display: \"flex\",\n                        alignContent: \"center\",\n                        alignItems: \"center\",\n                        flexDirection: \"column\",\n                        width: \"100%\",\n                        backgroundColor: \"rgb(249 249 249)\",\n                        // backgroundColor: projectCard.themeColor,\n                        // backgroundImage: \"url(\" + projectCard.imageUrl + \")\",\n                        // backgroundSize: \"cover\",\n                        // backgroundPosition: \"center\",\n                        // opacity: 0.75,\n                        // height: \"245px\",\n                        // objectFit: \"cover\",\n                        // objectPosition: \"0 0\",\n                      }}\n                      className=\"justify-content-center\"\n                    >\n                      <p\n                        style={{\n                          color: projectCard.themeColor,\n                          fontSize: \"larger\",\n                          fontWeight: \"550\",\n                        }}\n                      >\n                        {projectCard.name}\n                      </p>\n                      <p\n                        style={{\n                          // color:\"white\",\n                          color: projectCard.themeColor,\n                          fontWeight: \"500\",\n                          fontSize: \"1.1rem\",\n                        }}\n                      >\n                        {projectCard.miniTechStack.map((tech, index) => {\n                          return (\n                            <span>\n                              {index === projectCard.miniTechStack.length - 1\n                                ? tech\n                                : tech + \" / \"}\n                            </span>\n                          );\n                        })}\n                      </p>\n                      <br />\n                      <br />\n                      {/* <div style={{marginTop: \"45px\"}}> */}\n                      {/* <ProjectButton name={projectCard.name} themeColor={projectCard.themeColor}></ProjectButton> */}\n                      <Button\n                        className=\"project-card-button\"\n                        size=\"large\"\n                        // size=\"lg\"\n                        // variant=\"info\"\n                        style={{\n                          // backgroundColor: hoveredCardButton === projectCard.name ? projectCard.themeColor :  \"rgb(249 249 249)\",\n                          // color: hoveredCardButton === projectCard.name ? \"rgb(249 249 249)\" : projectCard.themeColor,\n                          backgroundColor: projectCard.themeColor,\n                          color: \"rgb(249, 249, 249)\",\n                          borderRadius: \"5%\",\n                          border: \"2px solid \" + projectCard.themeColor,\n                          fontFamily: \"monospace\",\n                          paddingLeft: \"30px\",\n                          paddingRight: \"30px\",\n                          // transform: \"rotateX(0deg)\"\n                          // marginTop: \"45px\"\n                        }}\n                        // onMouseEnter={() => changeButtonColor(projectCard.name)}\n                        // onMouseLeave={() => changeButtonColor(\"\")}\n                      >\n                        {/* <span>Learn More</span> */}\n                        <span\n                          style={{ textTransform: \"none\", fontSize: \"1.1rem\" }}\n                        >\n                          Learn More\n                          {/* <span><ImSearch></ImSearch></span> */}\n                        </span>\n                        {/* <div style={{marginBottom: \"5px\", marginLeft: \"10px\", fontSize: \"1.1rem\"}}>\n                          <span><ImSearch></ImSearch></span>\n                        </div> */}\n                      </Button>\n                      {/* <AwesomeButton\n                        type=\"primary\"\n                        style={{\n                          // backgroundColor: hoveredCardButton === projectCard.name ? projectCard.themeColor :  \"rgb(249 249 249)\",\n                          // color: hoveredCardButton === projectCard.name ? \"rgb(249 249 249)\" : projectCard.themeColor,\n                          backgroundColor: projectCard.color,\n                          color: projectCard.backgroundColor,\n                          borderRadius: \"5%\",\n                          border: \"2px solid \" + projectCard.themeColor,\n                          fontFamily: \"monospace\",\n                          paddingLeft: \"30px\",\n                          paddingRight: \"30px\",\n                          // transform: \"rotateX(0deg)\"\n                          // marginTop: \"45px\"\n                        }}\n                      >\n                        Learn More\n                      </AwesomeButton> */}\n                      {/* </div> */}\n                      {/* <div\n                        style={{\n                          backgroundImage: \"url(\" + projectCard.imageUrl + \")\",\n                          backgroundSize: \"cover\",\n                          backgroundPosition: \"center\",\n                          opacity: 0.5,\n                        }}\n                      >\n                      </div> */}\n                      {/* <h6 align=\"center\">lol</h6> */}\n                    </div>\n                  }\n                  // maxWidth={416}\n                  // maxWidth={isExtraSmallScreenWidth ? \"100%\" : 416}\n                  animationSpeed={700}\n                  height={300}\n                  // margin={9}\n                />\n                // <Card\n                //   key={uuid()}\n                //   style={projectCard.style}\n                //   className=\"project-card\"\n                // >\n                //   <div>\n                //     <img\n                //       src={projectCard.imageUrl}\n                //       alt={projectCard.name}\n                //       style={{\n                //         width: \"100%\",\n                //         height: \"245px\",\n                //         objectFit: \"cover\",\n                //         objectPosition: \"0 0\",\n                //       }}\n                //     ></img>\n                //     <div\n                //       align=\"center\"\n                //       style={{\n                //         padding: \"0.8rem 0rem 0.8rem 0rem\",\n                //         fontWeight: \"500\",\n                //       }}\n                //     >\n                //       {projectCard.name}\n                //     </div>\n                //   </div>\n                // </Card>\n              );\n            })}\n          </Zoom>\n          {/* </div> */}\n          {/* </StackGrid> */}\n          {/* <Card.Text>\n          {projectCard.miniTechStack.map((tech, index) => {\n            return (<span>{index === projectCard.miniTechStack.length - 1 ? tech : tech + \" / \"}</span>);\n          })}\n        </Card.Text>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"project-card-button\"\n        >\n          Go somewhere\n        </Button> */}\n        </Row>\n        {/* </Zoom> */}\n      </Container>\n    </Element>\n  );\n}\n","/Users/patelkhushal@ibm.com/portfolio/src/ProjectButton.js",[],"/Users/patelkhushal@ibm.com/portfolio/src/Loader.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":31,"nodeType":"68","messageId":"69","endLine":1,"endColumn":37},{"ruleId":"66","severity":1,"message":"70","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"71","line":14,"column":8,"nodeType":"68","messageId":"69","endLine":14,"endColumn":21},{"ruleId":"66","severity":1,"message":"72","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":17},{"ruleId":"66","severity":1,"message":"73","line":17,"column":10,"nodeType":"68","messageId":"69","endLine":17,"endColumn":14},{"ruleId":"66","severity":1,"message":"74","line":17,"column":16,"nodeType":"68","messageId":"69","endLine":17,"endColumn":21},{"ruleId":"66","severity":1,"message":"75","line":17,"column":29,"nodeType":"68","messageId":"69","endLine":17,"endColumn":35},{"ruleId":"66","severity":1,"message":"76","line":25,"column":10,"nodeType":"68","messageId":"69","endLine":25,"endColumn":18},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'ParticlesComp' is defined but never used.","'Particles' is defined but never used.","'Fade' is defined but never used.","'Slide' is defined but never used.","'Bounce' is defined but never used.","'ImSearch' is defined but never used.","no-global-assign","no-unsafe-negation"]